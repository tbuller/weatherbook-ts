var app = require("../app");
var debug = require("debug")("weatherbook:server");
var http = require("http");
var mongoose = require("mongoose");

var port = normalizePort("8080");
app.set("port", port);

var mongoDbUrl = "mongodb://localhost:27017/weatherbook";
mongoose.connect(mongoDbUrl, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});



var db = mongoose.connection;
db.on("error", console.error.bind(console, "Connection error: connection can't be established"))
db.once('open', () => {
  console.log('MongoDB connection established successfully.');
});

var server = http.createServer(app);

server.listen(port);
server.on("error", onError);
server.on("listening", onListening);

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }

  if (port >= 0) {
    return port;
  }

  return false;
}

function onError(error) {
  if (error.syscall !== "listen") {
    throw error;
  }

  var bind = typeof port === "string" ? "Pipe " + port : "Port " + port;

  switch (error.code) {
    case "EACCES":
      console.error(bind + " requires elevated privileges");
      // process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + " is already in use");
      // process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  var addr = server.address();
  var bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
  console.log("Now listening on " + bind);
  debug("Listening on " + bind);
}